
---------------------------------------------------------------------------------------------------------------
do local GUI = game.CoreGui:FindFirstChild("Darkrai");if GUI then GUI:Destroy();end;if _G.Color == nil then
	_G.Color = Color3.fromRGB(7, 236, 240)
end 
end

local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")

local function MakeDraggable(topbarobject, object)
 local Dragging = nil
 local DragInput = nil
 local DragStart = nil
 local StartPosition = nil

 local function Update(input)
	 local Delta = input.Position - DragStart
	 local pos = UDim2.new(StartPosition.X.Scale, StartPosition.X.Offset + Delta.X, StartPosition.Y.Scale, StartPosition.Y.Offset + Delta.Y)
	 local Tween = TweenService:Create(object, TweenInfo.new(0.15), {Position = pos})
	 Tween:Play()
 end

 topbarobject.InputBegan:Connect(
	 function(input)
		 if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			 Dragging = true
			 DragStart = input.Position
			 StartPosition = object.Position

			 input.Changed:Connect(
				 function()
					 if input.UserInputState == Enum.UserInputState.End then
						 Dragging = false
					 end
				 end
			 )
		 end
	 end
 )

 topbarobject.InputChanged:Connect(
	 function(input)
		 if
			 input.UserInputType == Enum.UserInputType.MouseMovement or
			 input.UserInputType == Enum.UserInputType.Touch
		 then
			 DragInput = input
		 end
	 end
 )

 UserInputService.InputChanged:Connect(
	 function(input)
		 if input == DragInput and Dragging then
			 Update(input)
		 end
	 end
 )
end

local DarkraiX = {}

function DarkraiX:ToggleUi()
if game.CoreGui:FindFirstChild("Darkrai").Enabled == true then -- oh am dumb
game.CoreGui:FindFirstChild("Darkrai").Enabled = false
else
game.CoreGui:FindFirstChild("Darkrai").Enabled = true
end
end

function DarkraiX:Window(text,gamenme,logo,keybind)
 local hubname = text
 local gamename = gamenme
 local uihide = false
 local abc = false
 local logo = logo or 0
 local currentpage = ""
 local keybind = keybind or Enum.KeyCode.RightControl
 local yoo = string.gsub(tostring(keybind),"Enum.KeyCode.","")
 if gamename == "" then 
	 gamename = ""..PlaceName.Name
 end
 
 local Darkrai = Instance.new("ScreenGui") -- guess i am using hubname wrong
 Darkrai.Name = "Darkrai" -- wait
 Darkrai.Parent = game.CoreGui
 Darkrai.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

 local Main = Instance.new("Frame")
 Main.Name = "Main"
 Main.Parent = Darkrai
 Main.ClipsDescendants = true
 Main.AnchorPoint = Vector2.new(0.5,0.5)
 Main.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
 Main.Position = UDim2.new(0.5, 0, 0.5, 0)
 Main.Size = UDim2.new(0, 0, 0, 0)
 
 Main:TweenSize(UDim2.new(0, 656, 0, 400),"Out","Quad",0.4,true)

 local MCNR = Instance.new("UICorner")
 MCNR.Name = "MCNR"
 MCNR.Parent = Main

 local Top = Instance.new("Frame")
 Top.Name = "Top"
 Top.Parent = Main
 Top.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
 Top.Size = UDim2.new(0, 656, 0, 27)

 local TCNR = Instance.new("UICorner")
 TCNR.Name = "TCNR"
 TCNR.Parent = Top

 local Logo = Instance.new("ImageLabel")
 Logo.Name = "Logo"
 Logo.Parent = Top
 Logo.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
 Logo.BackgroundTransparency = 1.000
 Logo.Position = UDim2.new(0, 10, 0, 1)
 Logo.Size = UDim2.new(0, 25, 0, 25)
 Logo.Image = ""

 local Name = Instance.new("TextLabel")
 Name.Name = "Name"
 Name.Parent = Top
 Name.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
 Name.BackgroundTransparency = 1.000
 Name.Position = UDim2.new(0.0609756112, 0, 0, 0)
 Name.Size = UDim2.new(0, 61, 0, 27)
 Name.Font = Enum.Font.GothamSemibold
 Name.Text = hubname
 Name.TextColor3 = Color3.fromRGB(255, 255, 255)
 Name.TextSize = 17.000

 local Hub = Instance.new("TextLabel")
 Hub.Name = "Hub"
 Hub.Parent = Top
 Hub.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
 Hub.BackgroundTransparency = 1.000
 Hub.Position = UDim2.new(0, 110, 0, 0)
 Hub.Size = UDim2.new(0, 81, 0, 27)
 Hub.Font = Enum.Font.GothamSemibold
 Hub.Text = "   | "..gamename
 Hub.TextColor3 = Color3.fromRGB(255,255,255)
 Hub.TextSize = 17.000
 Hub.TextXAlignment = Enum.TextXAlignment.Left

 local BindButton = Instance.new("TextButton")
 BindButton.Name = "BindButton"
 BindButton.Parent = Top
 BindButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
 BindButton.BackgroundTransparency = 1.000
 BindButton.Position = UDim2.new(0.847561002, 0, 0, 0)
 BindButton.Size = UDim2.new(0, 100, 0, 27)
 BindButton.Font = Enum.Font.GothamSemibold
 BindButton.Text = "[Hub Ui Rac Vai Lon]"
 BindButton.TextColor3 = Color3.fromRGB(255,255,255)
 BindButton.TextSize = 13.000

 local Tab = Instance.new("Frame")
 Tab.Name = "Tab"
 Tab.Parent = Main
 Tab.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
 Tab.Position = UDim2.new(0, 5, 0, 30)
 Tab.Size = UDim2.new(0, 150, 0, 365)

 local TCNR = Instance.new("UICorner")
 TCNR.Name = "TCNR"
 TCNR.Parent = Tab

 local ScrollTab = Instance.new("ScrollingFrame")
 ScrollTab.Name = "ScrollTab"
 ScrollTab.Parent = Tab
 ScrollTab.Active = true
 ScrollTab.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
 ScrollTab.BackgroundTransparency = 1.000
 ScrollTab.Size = UDim2.new(0, 150, 0, 365)
 ScrollTab.CanvasSize = UDim2.new(0, 0, 0, 0)
 ScrollTab.ScrollBarThickness = 0

 local PLL = Instance.new("UIListLayout")
 PLL.Name = "PLL"
 PLL.Parent = ScrollTab
 PLL.SortOrder = Enum.SortOrder.LayoutOrder
 PLL.Padding = UDim.new(0, 15)

 local PPD = Instance.new("UIPadding")
 PPD.Name = "PPD"
 PPD.Parent = ScrollTab
 PPD.PaddingLeft = UDim.new(0, 10)
 PPD.PaddingTop = UDim.new(0, 10)

 local Page = Instance.new("Frame")
 Page.Name = "Page"
 Page.Parent = Main
 Page.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
 Page.Position = UDim2.new(0.245426834, 0, 0.075000003, 0)
 Page.Size = UDim2.new(0, 490, 0, 365)

 local PCNR = Instance.new("UICorner")
 PCNR.Name = "PCNR"
 PCNR.Parent = Page

 local MainPage = Instance.new("Frame")
 MainPage.Name = "MainPage"
 MainPage.Parent = Page
 MainPage.ClipsDescendants = true
 MainPage.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
 MainPage.BackgroundTransparency = 1.000
 MainPage.Size = UDim2.new(0, 490, 0, 365)

 local PageList = Instance.new("Folder")
 PageList.Name = "PageList"
 PageList.Parent = MainPage

 local UIPageLayout = Instance.new("UIPageLayout")

 UIPageLayout.Parent = PageList
 UIPageLayout.SortOrder = Enum.SortOrder.LayoutOrder
 UIPageLayout.EasingDirection = Enum.EasingDirection.InOut
 UIPageLayout.EasingStyle = Enum.EasingStyle.Quad
 UIPageLayout.FillDirection = Enum.FillDirection.Vertical
 UIPageLayout.Padding = UDim.new(0, 15)
 UIPageLayout.TweenTime = 0.400
 UIPageLayout.GamepadInputEnabled = false
 UIPageLayout.ScrollWheelInputEnabled = false
 UIPageLayout.TouchInputEnabled = false
 
 MakeDraggable(Top,Main)

 UserInputService.InputBegan:Connect(function(input)
	 if input.KeyCode == Enum.KeyCode[yoo] then
		 if uihide == false then
			 uihide = true
			 Main:TweenSize(UDim2.new(0, 0, 0, 0),"In","Quad",0.4,true)
		 else
			 uihide = false
			 Main:TweenSize(UDim2.new(0, 656, 0, 400),"Out","Quad",0.4,true)
		 end
	 end
 end)
 
 local uitab = {}
 
 function uitab:AddTab(text)
	 local TabButton = Instance.new("TextButton")
	 TabButton.Parent = ScrollTab
	 TabButton.Name = text.."Server"
	 TabButton.Text = text
	 TabButton.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
	 TabButton.BorderColor3 = Color3.fromRGB(255,255,255)
	 TabButton.BorderSizePixel = 3
	 TabButton.Size = UDim2.new(0, 130, 0, 23)
	 TabButton.Font = Enum.Font.GothamSemibold
	 TabButton.TextColor3 = Color3.fromRGB(225, 225, 225)
	 TabButton.TextSize = 15.000
	 TabButton.TextTransparency = 0.500

	 local MainFramePage = Instance.new("ScrollingFrame")
	 MainFramePage.Name = text.."_Page"
	 MainFramePage.Parent = PageList
	 MainFramePage.Active = true
	 MainFramePage.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	 MainFramePage.BackgroundTransparency = 1.000
	 MainFramePage.BorderSizePixel = 0
	 MainFramePage.Size = UDim2.new(0, 490, 0, 365)
	 MainFramePage.CanvasSize = UDim2.new(0, 0, 0, 0)
	 MainFramePage.ScrollBarThickness = 0
	 
	 local UIPadding = Instance.new("UIPadding")
	 local UIListLayout = Instance.new("UIListLayout")
	 
	 UIPadding.Parent = MainFramePage
	 UIPadding.PaddingLeft = UDim.new(0, 10)
	 UIPadding.PaddingTop = UDim.new(0, 10)

	 UIListLayout.Padding = UDim.new(0,15)
	 UIListLayout.Parent = MainFramePage
	 UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
	 
	 TabButton.MouseButton1Click:Connect(function()
		 for i,v in next, ScrollTab:GetChildren() do
			 if v:IsA("TextButton") then
				 TweenService:Create(
					 v,
					 TweenInfo.new(0.3,Enum.EasingStyle.Quad,Enum.EasingDirection.Out),
					 {TextTransparency = 0.5}
				 ):Play()
			 end
			 TweenService:Create(
				 TabButton,
				 TweenInfo.new(0.3,Enum.EasingStyle.Quad,Enum.EasingDirection.Out),
				 {TextTransparency = 0}
			 ):Play()
		 end
		 for i,v in next, PageList:GetChildren() do
			 currentpage = string.gsub(TabButton.Name,"Server","").."_Page"
			 if v.Name == currentpage then
				 UIPageLayout:JumpTo(v)
			 end
		 end
	 end)

	 if abc == false then
		 for i,v in next, ScrollTab:GetChildren() do
			 if v:IsA("TextButton") then
				 TweenService:Create(
					 v,
					 TweenInfo.new(0.3,Enum.EasingStyle.Quad,Enum.EasingDirection.Out),
					 {TextTransparency = 0.5}
				 ):Play()
			 end
			 TweenService:Create(
				 TabButton,
				 TweenInfo.new(0.3,Enum.EasingStyle.Quad,Enum.EasingDirection.Out),
				 {TextTransparency = 0}
			 ):Play()
		 end
		 UIPageLayout:JumpToIndex(1)
		 abc = true
	 end
	 
	 game:GetService("RunService").Stepped:Connect(function()
		 pcall(function()
			 MainFramePage.CanvasSize = UDim2.new(0,0,0,UIListLayout.AbsoluteContentSize.Y + 20)
			 ScrollTab.CanvasSize = UDim2.new(0,0,0,PLL.AbsoluteContentSize.Y + 20)
		 end)
	 end)
	 
	 local main = {}
	 function main:AddButton(text,callback)
		 local Button = Instance.new("Frame")
		 local UICorner = Instance.new("UICorner")
		 local TextBtn = Instance.new("TextButton")
		 local UICorner_2 = Instance.new("UICorner")
		 local Black = Instance.new("Frame")
		 local UICorner_3 = Instance.new("UICorner")
		 
		 Button.Name = "Button"
		 Button.Parent = MainFramePage
		 Button.BackgroundColor3 = _G.Color
		 Button.Size = UDim2.new(0, 470, 0, 31)
		 
		 UICorner.CornerRadius = UDim.new(0, 5)
		 UICorner.Parent = Button
		 
		 TextBtn.Name = "TextBtn"
		 TextBtn.Parent = Button
		 TextBtn.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
		 TextBtn.Position = UDim2.new(0, 1, 0, 1)
		 TextBtn.Size = UDim2.new(0, 468, 0, 29)
		 TextBtn.AutoButtonColor = false
		 TextBtn.Font = Enum.Font.GothamSemibold
		 TextBtn.Text = text
		 TextBtn.TextColor3 = Color3.fromRGB(225, 225, 225)
		 TextBtn.TextSize = 15.000
		 
		 UICorner_2.CornerRadius = UDim.new(0, 5)
		 UICorner_2.Parent = TextBtn
		 
		 Black.Name = "Black"
		 Black.Parent = Button
		 Black.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
		 Black.BackgroundTransparency = 1.000
		 Black.BorderSizePixel = 0
		 Black.Position = UDim2.new(0, 1, 0, 1)
		 Black.Size = UDim2.new(0, 468, 0, 29)
		 
		 UICorner_3.CornerRadius = UDim.new(0, 5)
		 UICorner_3.Parent = Black

		 TextBtn.MouseEnter:Connect(function()
			 TweenService:Create(
				 Black,
				 TweenInfo.new(0.4,Enum.EasingStyle.Quad,Enum.EasingDirection.Out),
				 {BackgroundTransparency = 0.7}
			 ):Play()
		 end)
		 TextBtn.MouseLeave:Connect(function()
			 TweenService:Create(
				 Black,
				 TweenInfo.new(0.4,Enum.EasingStyle.Quad,Enum.EasingDirection.Out),
				 {BackgroundTransparency = 1}
			 ):Play()
		 end)
		 TextBtn.MouseButton1Click:Connect(function()
			 TextBtn.TextSize = 0
			 TweenService:Create(
				 TextBtn,
				 TweenInfo.new(0.4,Enum.EasingStyle.Quad,Enum.EasingDirection.Out),
				 {TextSize = 15}
			 ):Play()
			 callback()
		 end)
	 end
	 function main:AddToggle(text,config,callback)
		 config = config or false
		 local toggled = config
		 local Toggle = Instance.new("Frame")
		 local UICorner = Instance.new("UICorner")
		 local Button = Instance.new("TextButton")
		 local UICorner_2 = Instance.new("UICorner")
		 local Label = Instance.new("TextLabel")
		 local ToggleImage = Instance.new("Frame")
		 local UICorner_3 = Instance.new("UICorner")
		 local Circle = Instance.new("Frame")
		 local UICorner_4 = Instance.new("UICorner")

		 Toggle.Name = "Toggle"
		 Toggle.Parent = MainFramePage
		 Toggle.BackgroundColor3 = _G.Color
		 Toggle.Size = UDim2.new(0, 470, 0, 31)

		 UICorner.CornerRadius = UDim.new(0, 5)
		 UICorner.Parent = Toggle

		 Button.Name = "Button"
		 Button.Parent = Toggle
		 Button.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
		 Button.Position = UDim2.new(0, 1, 0, 1)
		 Button.Size = UDim2.new(0, 468, 0, 29)
		 Button.AutoButtonColor = false
		 Button.Font = Enum.Font.SourceSans
		 Button.Text = ""
		 Button.TextColor3 = Color3.fromRGB(0, 0, 0)
		 Button.TextSize = 11.000

		 UICorner_2.CornerRadius = UDim.new(0, 5)
		 UICorner_2.Parent = Button

		 Label.Name = "Label"
		 Label.Parent = Toggle
		 Label.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		 Label.BackgroundTransparency = 1.000
		 Label.Position = UDim2.new(0, 1, 0, 1)
		 Label.Size = UDim2.new(0, 468, 0, 29)
		 Label.Font = Enum.Font.GothamSemibold
		 Label.Text = text
		 Label.TextColor3 = Color3.fromRGB(225, 225, 225)
		 Label.TextSize = 15.000

		 ToggleImage.Name = "ToggleImage"
		 ToggleImage.Parent = Toggle
		 ToggleImage.BackgroundColor3 = Color3.fromRGB(225, 225, 225)
		 ToggleImage.Position = UDim2.new(0, 415, 0, 5)
		 ToggleImage.Size = UDim2.new(0, 45, 0, 20)

		 UICorner_3.CornerRadius = UDim.new(0, 10)
		 UICorner_3.Parent = ToggleImage

		 Circle.Name = "Circle"
		 Circle.Parent = ToggleImage
		 Circle.BackgroundColor3 = Color3.fromRGB(227, 60, 60)
		 Circle.Position = UDim2.new(0, 2, 0, 2)
		 Circle.Size = UDim2.new(0, 16, 0, 16)

		 UICorner_4.CornerRadius = UDim.new(0, 10)
		 UICorner_4.Parent = Circle

		 Button.MouseButton1Click:Connect(function()
			 if toggled == false then
				 toggled = true
				 Circle:TweenPosition(UDim2.new(0,27,0,2),"Out","Sine",0.2,true)
				 TweenService:Create(
					 Circle,
					 TweenInfo.new(0.4,Enum.EasingStyle.Quad,Enum.EasingDirection.Out),
					 {BackgroundColor3 = Color3.fromRGB(0,255,0) }
				 ):Play()
			 else
				 toggled = false
				 Circle:TweenPosition(UDim2.new(0,2,0,2),"Out","Sine",0.2,true)
				 TweenService:Create(
					 Circle,
					 TweenInfo.new(0.4,Enum.EasingStyle.Quad,Enum.EasingDirection.Out),
					 {BackgroundColor3 = Color3.fromRGB(227, 60, 110)}
				 ):Play()
			 end
			 pcall(callback,toggled)
		 end)

		 if config == true then
			 toggled = true
			 Circle:TweenPosition(UDim2.new(0,27,0,2),"Out","Sine",0.4,true)
			 TweenService:Create(
				 Circle,
				 TweenInfo.new(0.4,Enum.EasingStyle.Quad,Enum.EasingDirection.Out),
				 {BackgroundColor3 = Color3.fromRGB(0,255,0) }
			 ):Play()
			 pcall(callback,toggled)
		 end
	 end
	 function main:AddDropdown(text,option,callback)
		 local isdropping = false
		 local Dropdown = Instance.new("Frame")
		 local UICorner = Instance.new("UICorner")
		 local DropTitle = Instance.new("TextLabel")
		 local DropScroll = Instance.new("ScrollingFrame")
		 local UIListLayout = Instance.new("UIListLayout")
		 local UIPadding = Instance.new("UIPadding")
		 local DropButton = Instance.new("TextButton")
		 local DropImage = Instance.new("ImageLabel")
		 
		 Dropdown.Name = "Dropdown"
		 Dropdown.Parent = MainFramePage
		 Dropdown.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
		 Dropdown.ClipsDescendants = true
		 Dropdown.Size = UDim2.new(0, 470, 0, 31)
		 
		 UICorner.CornerRadius = UDim.new(0, 5)
		 UICorner.Parent = Dropdown
		 
		 DropTitle.Name = "DropTitle"
		 DropTitle.Parent = Dropdown
		 DropTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		 DropTitle.BackgroundTransparency = 1.000
		 DropTitle.Size = UDim2.new(0, 470, 0, 31)
		 DropTitle.Font = Enum.Font.GothamSemibold
		 DropTitle.Text = text.. " : "
		 DropTitle.TextColor3 = Color3.fromRGB(225, 225, 225)
		 DropTitle.TextSize = 15.000
		 
		 DropScroll.Name = "DropScroll"
		 DropScroll.Parent = DropTitle
		 DropScroll.Active = true
		 DropScroll.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		 DropScroll.BackgroundTransparency = 1.000
		 DropScroll.BorderSizePixel = 0
		 DropScroll.Position = UDim2.new(0, 0, 0, 31)
		 DropScroll.Size = UDim2.new(0, 470, 0, 100)
		 DropScroll.CanvasSize = UDim2.new(0, 0, 0, 0)
		 DropScroll.ScrollBarThickness = 3
		 
		 UIListLayout.Parent = DropScroll
		 UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
		 UIListLayout.Padding = UDim.new(0, 5)
		 
		 UIPadding.Parent = DropScroll
		 UIPadding.PaddingLeft = UDim.new(0, 5)
		 UIPadding.PaddingTop = UDim.new(0, 5)
		 
		 DropImage.Name = "DropImage"
		 DropImage.Parent = Dropdown
		 DropImage.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		 DropImage.BackgroundTransparency = 1.000
		 DropImage.Position = UDim2.new(0, 445, 0, 6)
		 DropImage.Rotation = 180.000
		 DropImage.Size = UDim2.new(0, 20, 0, 20)
		 DropImage.Image = "rbxassetid://6031090990"
		 
		 DropButton.Name = "DropButton"
		 DropButton.Parent = Dropdown
		 DropButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		 DropButton.BackgroundTransparency = 1.000
		 DropButton.Size = UDim2.new(0, 470, 0, 31)
		 DropButton.Font = Enum.Font.SourceSans
		 DropButton.Text = ""
		 DropButton.TextColor3 = Color3.fromRGB(0, 0, 0)
		 DropButton.TextSize = 14.000

		 for i,v in next,option do
			 local Item = Instance.new("TextButton")

			 Item.Name = "Item"
			 Item.Parent = DropScroll
			 Item.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			 Item.BackgroundTransparency = 1.000
			 Item.Size = UDim2.new(0, 460, 0, 26)
			 Item.Font = Enum.Font.GothamSemibold
			 Item.Text = tostring(v)
			 Item.TextColor3 = Color3.fromRGB(225, 225, 225)
			 Item.TextSize = 13.000
			 Item.TextTransparency = 0.500

			 Item.MouseEnter:Connect(function()
				 TweenService:Create(
					 Item,
					 TweenInfo.new(0.3,Enum.EasingStyle.Quad,Enum.EasingDirection.Out),
					 {TextTransparency = 0}
				 ):Play()
			 end)

			 Item.MouseLeave:Connect(function()
				 TweenService:Create(
					 Item,
					 TweenInfo.new(0.3,Enum.EasingStyle.Quad,Enum.EasingDirection.Out),
					 {TextTransparency = 0.5}
				 ):Play()
			 end)

			 Item.MouseButton1Click:Connect(function()
				 isdropping = false
				 Dropdown:TweenSize(UDim2.new(0,470,0,31),"Out","Quad",0.3,true)
				 TweenService:Create(
					 DropImage,
					 TweenInfo.new(0.3,Enum.EasingStyle.Quad,Enum.EasingDirection.Out),
					 {Rotation = 180}
				 ):Play()
				 callback(Item.Text)
				 DropTitle.Text = text.." : "..Item.Text
			 end)
		 end

		 DropScroll.CanvasSize = UDim2.new(0,0,0,UIListLayout.AbsoluteContentSize.Y + 10)

		 DropButton.MouseButton1Click:Connect(function()
			 if isdropping == false then
				 isdropping = true
				 Dropdown:TweenSize(UDim2.new(0,470,0,131),"Out","Quad",0.3,true)
				 TweenService:Create(
					 DropImage,
					 TweenInfo.new(0.3,Enum.EasingStyle.Quad,Enum.EasingDirection.Out),
					 {Rotation = 0}
				 ):Play()
			 else
				 isdropping = false
				 Dropdown:TweenSize(UDim2.new(0,470,0,31),"Out","Quad",0.3,true)
				 TweenService:Create(
					 DropImage,
					 TweenInfo.new(0.3,Enum.EasingStyle.Quad,Enum.EasingDirection.Out),
					 {Rotation = 180}
				 ):Play()
			 end
		 end)

		 local dropfunc = {}
		 function dropfunc:Add(t)
			 local Item = Instance.new("TextButton")
			 Item.Name = "Item"
			 Item.Parent = DropScroll
			 Item.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			 Item.BackgroundTransparency = 1.000
			 Item.Size = UDim2.new(0, 470, 0, 26)
			 Item.Font = Enum.Font.GothamSemibold
			 Item.Text = tostring(t)
			 Item.TextColor3 = Color3.fromRGB(225, 225, 225)
			 Item.TextSize = 13.000
			 Item.TextTransparency = 0.500

			 Item.MouseEnter:Connect(function()
				 TweenService:Create(
					 Item,
					 TweenInfo.new(0.3,Enum.EasingStyle.Quad,Enum.EasingDirection.Out),
					 {TextTransparency = 0}
				 ):Play()
			 end)

			 Item.MouseLeave:Connect(function()
				 TweenService:Create(
					 Item,
					 TweenInfo.new(0.3,Enum.EasingStyle.Quad,Enum.EasingDirection.Out),
					 {TextTransparency = 0.5}
				 ):Play()
			 end)

			 Item.MouseButton1Click:Connect(function()
				 isdropping = false
				 Dropdown:TweenSize(UDim2.new(0,470,0,31),"Out","Quad",0.3,true)
				 TweenService:Create(
					 DropImage,
					 TweenInfo.new(0.3,Enum.EasingStyle.Quad,Enum.EasingDirection.Out),
					 {Rotation = 180}
				 ):Play()
				 callback(Item.Text)
				 DropTitle.Text = text.." : "..Item.Text
			 end)
		 end
		 function dropfunc:Clear()
			 DropTitle.Text = tostring(text).." : "
			 isdropping = false
			 Dropdown:TweenSize(UDim2.new(0,470,0,31),"Out","Quad",0.3,true)
			 TweenService:Create(
				 DropImage,
				 TweenInfo.new(0.3,Enum.EasingStyle.Quad,Enum.EasingDirection.Out),
				 {Rotation = 180}
			 ):Play()
			 for i,v in next, DropScroll:GetChildren() do
				 if v:IsA("TextButton") then
					 v:Destroy()
				 end
			 end
		 end
		 return dropfunc
	 end

	 function main:AddSlider(text,min,max,set,callback)
		 local Slider = Instance.new("Frame")
		 local slidercorner = Instance.new("UICorner")
		 local sliderr = Instance.new("Frame")
		 local sliderrcorner = Instance.new("UICorner")
		 local SliderLabel = Instance.new("TextLabel")
		 local HAHA = Instance.new("Frame")
		 local AHEHE = Instance.new("TextButton")
		 local bar = Instance.new("Frame")
		 local bar1 = Instance.new("Frame")
		 local bar1corner = Instance.new("UICorner")
		 local barcorner = Instance.new("UICorner")
		 local circlebar = Instance.new("Frame")
		 local UICorner = Instance.new("UICorner")
		 local slidervalue = Instance.new("Frame")
		 local valuecorner = Instance.new("UICorner")
		 local TextBox = Instance.new("TextBox")
		 local UICorner_2 = Instance.new("UICorner")

		 Slider.Name = "Slider"
		 Slider.Parent = MainFramePage
		 Slider.BackgroundColor3 = _G.Color
		 Slider.BackgroundTransparency = 0
		 Slider.Size = UDim2.new(0, 470, 0, 51)

		 slidercorner.CornerRadius = UDim.new(0, 5)
		 slidercorner.Name = "slidercorner"
		 slidercorner.Parent = Slider

		 sliderr.Name = "sliderr"
		 sliderr.Parent = Slider
		 sliderr.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
		 sliderr.Position = UDim2.new(0, 1, 0, 1)
		 sliderr.Size = UDim2.new(0, 468, 0, 49)

		 sliderrcorner.CornerRadius = UDim.new(0, 5)
		 sliderrcorner.Name = "sliderrcorner"
		 sliderrcorner.Parent = sliderr

		 SliderLabel.Name = "SliderLabel"
		 SliderLabel.Parent = sliderr
		 SliderLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		 SliderLabel.BackgroundTransparency = 1.000
		 SliderLabel.Position = UDim2.new(0, 15, 0, 0)
		 SliderLabel.Size = UDim2.new(0, 180, 0, 26)
		 SliderLabel.Font = Enum.Font.GothamSemibold
		 SliderLabel.Text = text
		 SliderLabel.TextColor3 = Color3.fromRGB(225, 225, 225)
		 SliderLabel.TextSize = 16.000
		 SliderLabel.TextTransparency = 0
		 SliderLabel.TextXAlignment = Enum.TextXAlignment.Left

		 HAHA.Name = "HAHA"
		 HAHA.Parent = sliderr
		 HAHA.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		 HAHA.BackgroundTransparency = 1.000
		 HAHA.Size = UDim2.new(0, 468, 0, 29)

		 AHEHE.Name = "AHEHE"
		 AHEHE.Parent = sliderr
		 AHEHE.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		 AHEHE.BackgroundTransparency = 1.000
		 AHEHE.Position = UDim2.new(0, 10, 0, 35)
		 AHEHE.Size = UDim2.new(0, 448, 0, 5)
		 AHEHE.Font = Enum.Font.SourceSans
		 AHEHE.Text = ""
		 AHEHE.TextColor3 = Color3.fromRGB(0, 0, 0)
		 AHEHE.TextSize = 14.000

		 bar.Name = "bar"
		 bar.Parent = AHEHE
		 bar.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
		 bar.Size = UDim2.new(0, 448, 0, 5)

		 bar1.Name = "bar1"
		 bar1.Parent = bar
		 bar1.BackgroundColor3 = _G.Color
		 bar1.BackgroundTransparency = 0
		 bar1.Size = UDim2.new(set/max, 0, 0, 5)

		 bar1corner.CornerRadius = UDim.new(0, 5)
		 bar1corner.Name = "bar1corner"
		 bar1corner.Parent = bar1

		 barcorner.CornerRadius = UDim.new(0, 5)
		 barcorner.Name = "barcorner"
		 barcorner.Parent = bar

		 circlebar.Name = "circlebar"
		 circlebar.Parent = bar1
		 circlebar.BackgroundColor3 = Color3.fromRGB(225, 225, 225)
		 circlebar.Position = UDim2.new(1, -2, 0, -3)
		 circlebar.Size = UDim2.new(0, 10, 0, 10)

		 UICorner.CornerRadius = UDim.new(0, 100)
		 UICorner.Parent = circlebar

		 slidervalue.Name = "slidervalue"
		 slidervalue.Parent = sliderr
		 slidervalue.BackgroundColor3 = _G.Color
		 slidervalue.BackgroundTransparency = 0
		 slidervalue.Position = UDim2.new(0, 395, 0, 5)
		 slidervalue.Size = UDim2.new(0, 65, 0, 18)

		 valuecorner.CornerRadius = UDim.new(0, 5)
		 valuecorner.Name = "valuecorner"
		 valuecorner.Parent = slidervalue

		 TextBox.Parent = slidervalue
		 TextBox.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
		 TextBox.Position = UDim2.new(0, 1, 0, 1)
		 TextBox.Size = UDim2.new(0, 63, 0, 16)
		 TextBox.Font = Enum.Font.GothamSemibold
		 TextBox.TextColor3 = Color3.fromRGB(225, 225, 225)
		 TextBox.TextSize = 9.000
		 TextBox.Text = set
		 TextBox.TextTransparency = 0

		 UICorner_2.CornerRadius = UDim.new(0, 5)
		 UICorner_2.Parent = TextBox

		 local mouse = game.Players.LocalPlayer:GetMouse()
		 local uis = game:GetService("UserInputService")

		 if Value == nil then
			 Value = set
			 pcall(function()
				 callback(Value)
			 end)
		 end
		 
		 AHEHE.MouseButton1Down:Connect(function()
			 Value = math.floor((((tonumber(max) - tonumber(min)) / 448) * bar1.AbsoluteSize.X) + tonumber(min)) or 0
			 pcall(function()
				 callback(Value)
			 end)
			 bar1.Size = UDim2.new(0, math.clamp(mouse.X - bar1.AbsolutePosition.X, 0, 448), 0, 5)
			 circlebar.Position = UDim2.new(0, math.clamp(mouse.X - bar1.AbsolutePosition.X - 2, 0, 438), 0, -3)
			 moveconnection = mouse.Move:Connect(function()
				 TextBox.Text = Value
				 Value = math.floor((((tonumber(max) - tonumber(min)) / 448) * bar1.AbsoluteSize.X) + tonumber(min))
				 pcall(function()
					 callback(Value)
				 end)
				 bar1.Size = UDim2.new(0, math.clamp(mouse.X - bar1.AbsolutePosition.X, 0, 448), 0, 5)
				 circlebar.Position = UDim2.new(0, math.clamp(mouse.X - bar1.AbsolutePosition.X - 2, 0, 438), 0, -3)
			 end)
			 releaseconnection = uis.InputEnded:Connect(function(Mouse)
				 if Mouse.UserInputType == Enum.UserInputType.MouseButton1 or Mouse.UserInputType == Enum.UserInputType.Touch then
					 Value = math.floor((((tonumber(max) - tonumber(min)) / 448) * bar1.AbsoluteSize.X) + tonumber(min))
					 pcall(function()
						 callback(Value)
					 end)
					 bar1.Size = UDim2.new(0, math.clamp(mouse.X - bar1.AbsolutePosition.X, 0, 448), 0, 5)
					 circlebar.Position = UDim2.new(0, math.clamp(mouse.X - bar1.AbsolutePosition.X - 2, 0, 438), 0, -3)
					 moveconnection:Disconnect()
					 releaseconnection:Disconnect()
				 end
			 end)
		 end)
		 releaseconnection = uis.InputEnded:Connect(function(Mouse)
			 if Mouse.UserInputType == Enum.UserInputType.MouseButton1 or Mouse.UserInputType == Enum.UserInputType.Touch  then
				 Value = math.floor((((tonumber(max) - tonumber(min)) / 448) * bar1.AbsoluteSize.X) + tonumber(min))
				 TextBox.Text = Value
			 end
		 end)

		 TextBox.FocusLost:Connect(function()
			 if tonumber(TextBox.Text) > max then
				 TextBox.Text  = max
			 end
			 bar1.Size = UDim2.new((TextBox.Text or 0) / max, 0, 0, 5)
			 circlebar.Position = UDim2.new(1, -2, 0, -3)
			 TextBox.Text = tostring(TextBox.Text and math.floor( (TextBox.Text / max) * (max - min) + min) )
			 pcall(callback, TextBox.Text)
		 end)
	 end

	 function main:AddTextbox(text,disappear,callback)
		 local Textbox = Instance.new("Frame")
		 local TextboxCorner = Instance.new("UICorner")
		 local Textboxx = Instance.new("Frame")
		 local TextboxxCorner = Instance.new("UICorner")
		 local TextboxLabel = Instance.new("TextLabel")
		 local txtbtn = Instance.new("TextButton")
		 local RealTextbox = Instance.new("TextBox")
		 local UICorner = Instance.new("UICorner")

		 Textbox.Name = "Textbox"
		 Textbox.Parent = MainFramePage
		 Textbox.BackgroundColor3 = _G.Color
		 Textbox.BackgroundTransparency = 0
		 Textbox.Size = UDim2.new(0, 470, 0, 31)

		 TextboxCorner.CornerRadius = UDim.new(0, 5)
		 TextboxCorner.Name = "TextboxCorner"
		 TextboxCorner.Parent = Textbox

		 Textboxx.Name = "Textboxx"
		 Textboxx.Parent = Textbox
		 Textboxx.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
		 Textboxx.Position = UDim2.new(0, 1, 0, 1)
		 Textboxx.Size = UDim2.new(0, 468, 0, 29)

		 TextboxxCorner.CornerRadius = UDim.new(0, 5)
		 TextboxxCorner.Name = "TextboxxCorner"
		 TextboxxCorner.Parent = Textboxx

		 TextboxLabel.Name = "TextboxLabel"
		 TextboxLabel.Parent = Textbox
		 TextboxLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		 TextboxLabel.BackgroundTransparency = 1.000
		 TextboxLabel.Position = UDim2.new(0, 15, 0, 0)
		 TextboxLabel.Text = text
		 TextboxLabel.Size = UDim2.new(0, 145, 0, 31)
		 TextboxLabel.Font = Enum.Font.GothamSemibold
		 TextboxLabel.TextColor3 = Color3.fromRGB(225, 225, 225)
		 TextboxLabel.TextSize = 16.000
		 TextboxLabel.TextTransparency = 0
		 TextboxLabel.TextXAlignment = Enum.TextXAlignment.Left

		 txtbtn.Name = "txtbtn"
		 txtbtn.Parent = Textbox
		 txtbtn.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		 txtbtn.BackgroundTransparency = 1.000
		 txtbtn.Position = UDim2.new(0, 1, 0, 1)
		 txtbtn.Size = UDim2.new(0, 468, 0, 29)
		 txtbtn.Font = Enum.Font.SourceSans
		 txtbtn.Text = ""
		 txtbtn.TextColor3 = Color3.fromRGB(0, 0, 0)
		 txtbtn.TextSize = 14.000

		 RealTextbox.Name = "RealTextbox"
		 RealTextbox.Parent = Textbox
		 RealTextbox.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
		 RealTextbox.BackgroundTransparency = 0
		 RealTextbox.Position = UDim2.new(0, 360, 0, 4)
		 RealTextbox.Size = UDim2.new(0, 100, 0, 24)
		 RealTextbox.Font = Enum.Font.GothamSemibold
		 RealTextbox.Text = ""
		 RealTextbox.TextColor3 = Color3.fromRGB(225, 225, 225)
		 RealTextbox.TextSize = 11.000
		 RealTextbox.TextTransparency = 0

		 RealTextbox.FocusLost:Connect(function()
			 callback(RealTextbox.Text)
			 if disappear then
				 RealTextbox.Text = ""
			 end
		 end)

		 UICorner.CornerRadius = UDim.new(0, 5)
		 UICorner.Parent = RealTextbox
	 end
	 function main:AddLabel(text)
		 local Label = Instance.new("TextLabel")
		 local PaddingLabel = Instance.new("UIPadding")
		 local labelfunc = {}
 
		 Label.Name = "Label"
		 Label.Parent = MainFramePage
		 Label.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		 Label.BackgroundTransparency = 1.000
		 Label.Size = UDim2.new(0, 470, 0, 20)
		 Label.Font = Enum.Font.GothamSemibold
		 Label.TextColor3 = Color3.fromRGB(225, 225, 225)
		 Label.TextSize = 16.000
		 Label.Text = text
		 Label.TextXAlignment = Enum.TextXAlignment.Left

		 PaddingLabel.PaddingLeft = UDim.new(0,15)
		 PaddingLabel.Parent = Label
		 PaddingLabel.Name = "PaddingLabel"
 
		 function labelfunc:Set(newtext)
			 Label.Text = newtext
		 end
		 return labelfunc
	 end

	 function main:AddSeperator(text)
		 local Seperator = Instance.new("Frame")
		 local Sep1 = Instance.new("Frame")
		 local Sep2 = Instance.new("TextLabel")
		 local Sep3 = Instance.new("Frame")
		 
		 Seperator.Name = "Seperator"
		 Seperator.Parent = MainFramePage
		 Seperator.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		 Seperator.BackgroundTransparency = 1.000
		 Seperator.Size = UDim2.new(0, 470, 0, 20)
		 
		 Sep1.Name = "Sep1"
		 Sep1.Parent = Seperator
		 Sep1.BackgroundColor3 = _G.Color
		 Sep1.BorderSizePixel = 0
		 Sep1.Position = UDim2.new(0, 0, 0, 10)
		 Sep1.Size = UDim2.new(0, 80, 0, 1)
		 
		 Sep2.Name = "Sep2"
		 Sep2.Parent = Seperator
		 Sep2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		 Sep2.BackgroundTransparency = 1.000
		 Sep2.Position = UDim2.new(0, 185, 0, 0)
		 Sep2.Size = UDim2.new(0, 100, 0, 20)
		 Sep2.Font = Enum.Font.GothamSemibold
		 Sep2.Text = text
		 Sep2.TextColor3 = Color3.fromRGB(255, 255, 255)
		 Sep2.TextSize = 14.000
		 
		 Sep3.Name = "Sep3"
		 Sep3.Parent = Seperator
		 Sep3.BackgroundColor3 = _G.Color
		 Sep3.BorderSizePixel = 0
		 Sep3.Position = UDim2.new(0, 390, 0, 10)
		 Sep3.Size = UDim2.new(0, 80, 0, 1)
	 end

	 function main:AddLine()
		 local Linee = Instance.new("Frame")
		 local Line = Instance.new("Frame")
		 
		 Linee.Name = "Linee"
		 Linee.Parent = MainFramePage
		 Linee.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		 Linee.BackgroundTransparency = 1.000
		 Linee.Position = UDim2.new(0, 0, 0.119999997, 0)
		 Linee.Size = UDim2.new(0, 470, 0, 20)
		 
		 Line.Name = "Line"
		 Line.Parent = Linee
		 Line.BackgroundColor3 = _G.Color
		 Line.BorderSizePixel = 0
		 Line.Position = UDim2.new(0, 0, 0, 10)
		 Line.Size = UDim2.new(0, 470, 0, 1)
	 end
	 return main
 end
 return uitab
end


local ScreenGui1 = Instance.new("ScreenGui")
local ImageButton1 = Instance.new("ImageButton")
local UICorner = Instance.new("UICorner")

ScreenGui1.Name = "ImageButton"
ScreenGui1.Parent = game.CoreGui
ScreenGui1.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

ImageButton1.Parent = ScreenGui1
ImageButton1.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
ImageButton1.BorderSizePixel = 0
ImageButton1.Position = UDim2.new(0.120833337, 0, 0.0952890813, 0)
ImageButton1.Size = UDim2.new(0, 50, 0, 50)
ImageButton1.Draggable = true
ImageButton1.Image = "http://www.roblox.com/asset/?id=109063580556108"
ImageButton1.MouseButton1Down:connect(function()
game:GetService("VirtualInputManager"):SendKeyEvent(true,305,false,game)
game:GetService("VirtualInputManager"):SendKeyEvent(false,305,false,game)
end)
UICorner.Parent = ImageButton1

local Library = DarkraiX:Window("GOKU Hub","Dead Rails","GOKU Hub",Enum.KeyCode.RightControl);

local Main = Library:AddTab("Main=))","")

Main:AddSeperator("Hé Hé")

Main:AddButton("Aimbotv1",function()
--dead rails wall hack aimbot.
local Players = game:GetService("Players")
local player = Players.LocalPlayer
player.CameraMode = Enum.CameraMode.Classic
local runService = game:GetService("RunService")
local StarterGui = game:GetService("StarterGui")
local camera = workspace.CurrentCamera
 
StarterGui:SetCore("SendNotification", {
    Title = "Code by Truong", -- dont skid ðŸ™ðŸ’”
    Text = "on Roblox",
    Duration = 3
})
 
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "NPC_Lock_GUI"
screenGui.Parent = game:GetService("CoreGui")
 
local button = Instance.new("TextButton")
button.Name = "NPC Lock: ON/OFF"
button.Size = UDim2.new(0, 150, 0, 50)
button.Position = UDim2.new(0.5, -75, 0.9, -25)
button.BackgroundColor3 = Color3.new(0, 0, 0)
button.TextColor3 = Color3.new(1, 1, 1)
button.Text = "NPC Lock: OFF"
button.Font = Enum.Font.Fantasy
button.TextScaled = true
button.TextSize = 20
button.Parent = screenGui
 
local uicorner = Instance.new("UICorner")
uicorner.CornerRadius = UDim.new(0, 12)
uicorner.Parent = button
 
local dragging = false
local dragInput, dragStart, startPos
 
local function update(input)
    local delta = input.Position - dragStart
    button.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end
 
button.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = button.Position
 
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)
 
button.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)
 
game:GetService("UserInputService").InputChanged:Connect(function(input)
    if dragging and input == dragInput then
        update(input)
    end
end)
 
local npcLock = false
local lastTarget = nil
local toggleLoop
 
local function addPlayerHighlight()
    if player.Character then
        local highlight = player.Character:FindFirstChild("PlayerHighlightESP")
        if not highlight then
            highlight = Instance.new("Highlight")
            highlight.Name = "PlayerHighlightESP"
            highlight.FillColor = Color3.new(1, 1, 1)
            highlight.OutlineColor = Color3.new(1, 1, 1)
            highlight.FillTransparency = 0.5
            highlight.OutlineTransparency = 0
            highlight.Parent = player.Character
        end
    end
end
 
local function removePlayerHighlight()
    if player.Character and player.Character:FindFirstChild("PlayerHighlightESP") then
        player.Character.PlayerHighlightESP:Destroy()
    end
end
 
local function getClosestNPC()
    local closestNPC = nil
    local closestDistance = math.huge
 
    for _, object in ipairs(workspace:GetDescendants()) do
        if object:IsA("Model") then
            local humanoid = object:FindFirstChild("Humanoid") or object:FindFirstChildWhichIsA("Humanoid")
            local hrp = object:FindFirstChild("HumanoidRootPart") or object.PrimaryPart
            if humanoid and hrp and humanoid.Health > 0 and object.Name ~= "Horse" then
                local isPlayer = false
                for _, pl in ipairs(Players:GetPlayers()) do
                    if pl.Character == object then
                        isPlayer = true
                        break
                    end
                end
                if not isPlayer then
                    local distance = (hrp.Position - player.Character.HumanoidRootPart.Position).Magnitude
                    if distance < closestDistance then
                        closestDistance = distance
                        closestNPC = object
                    end
                end
            end
        end
    end
 
    return closestNPC
end
 
button.MouseButton1Click:Connect(function()
    npcLock = not npcLock
    if npcLock then
        button.Text = "NPC Lock: ON"
        toggleLoop = runService.RenderStepped:Connect(function()
            local npc = getClosestNPC()
            if npc and npc:FindFirstChild("Humanoid") then
                local npcHumanoid = npc:FindFirstChild("Humanoid")
                if npcHumanoid.Health > 0 then
                    camera.CameraSubject = npcHumanoid
                    lastTarget = npc
                    addPlayerHighlight()
                else
                    StarterGui:SetCore("SendNotification", {
                        Title = "Killed NPC",
                        Text = npc.Name,
                        Duration = 0.4
                    })
                    lastTarget = nil
                    removePlayerHighlight()
                    if player.Character and player.Character:FindFirstChild("Humanoid") then
                        camera.CameraSubject = player.Character:FindFirstChild("Humanoid")
                    end
                end
            else
                if player.Character and player.Character:FindFirstChild("Humanoid") then
                    camera.CameraSubject = player.Character:FindFirstChild("Humanoid")
                end
                lastTarget = nil
                removePlayerHighlight()
            end
        end)
    else
        button.Text = "NPC Lock: OFF"
        if toggleLoop then
            toggleLoop:Disconnect()
            toggleLoop = nil
        end
        removePlayerHighlight()
        if player.Character and player.Character:FindFirstChild("Humanoid") then
            camera.CameraSubject = player.Character:FindFirstChild("Humanoid")
        end
    end
end)
end)
-------------------------------------------
Main:AddButton("Aimbotv2",function()
-- made by Truong(my roblox user name Truong)
local fov = 136
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Cam = workspace.CurrentCamera
local Player = game:GetService("Players").LocalPlayer

local FOVring = Drawing.new("Circle")
FOVring.Visible = false
FOVring.Thickness = 2
FOVring.Color = Color3.fromRGB(128, 0, 128)
FOVring.Filled = false
FOVring.Radius = fov
FOVring.Position = Cam.ViewportSize / 2

local isAiming = false
local validNPCs = {}
local raycastParams = RaycastParams.new()
raycastParams.FilterType = Enum.RaycastFilterType.Blacklist

local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = game.CoreGui

local ToggleButton = Instance.new("TextButton")
ToggleButton.Size = UDim2.new(0, 120, 0, 40)
ToggleButton.Position = UDim2.new(0, 10, 0, 10)
ToggleButton.Text = "AIMBOT: OFF"
ToggleButton.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
ToggleButton.TextColor3 = Color3.fromRGB(255, 50, 50)
ToggleButton.Font = Enum.Font.GothamBold
ToggleButton.TextSize = 14
ToggleButton.Parent = ScreenGui

local function isNPC(obj)
    return obj:IsA("Model") 
        and obj:FindFirstChild("Humanoid")
        and obj.Humanoid.Health > 0
        and obj:FindFirstChild("Head")
        and obj:FindFirstChild("HumanoidRootPart")
        and not game:GetService("Players"):GetPlayerFromCharacter(obj)
end

local function updateNPCs()
    local tempTable = {}
    for _, obj in ipairs(workspace:GetDescendants()) do
        if isNPC(obj) then
            tempTable[obj] = true
        end
    end
    for i = #validNPCs, 1, -1 do
        if not tempTable[validNPCs[i]] then
            table.remove(validNPCs, i)
        end
    end
    for obj in pairs(tempTable) do
        if not table.find(validNPCs, obj) then
            table.insert(validNPCs, obj)
        end
    end
end

local function handleDescendant(descendant)
    if isNPC(descendant) then
        table.insert(validNPCs, descendant)
        local humanoid = descendant:WaitForChild("Humanoid")
        humanoid.Destroying:Connect(function()
            for i = #validNPCs, 1, -1 do
                if validNPCs[i] == descendant then
                    table.remove(validNPCs, i)
                    break
                end
            end
        end)
    end
end

workspace.DescendantAdded:Connect(handleDescendant)

local function updateDrawings()
    FOVring.Position = Cam.ViewportSize / 2
    FOVring.Radius = fov * (Cam.ViewportSize.Y / 1080)
end

local function predictPos(target)
    local rootPart = target:FindFirstChild("HumanoidRootPart")
    local head = target:FindFirstChild("Head")
    if not rootPart or not head then
        return head and head.Position or rootPart and rootPart.Position
    end
    local velocity = rootPart.Velocity
    local predictionTime = 0.02
    local basePosition = rootPart.Position + velocity * predictionTime
    local headOffset = head.Position - rootPart.Position
    return basePosition + headOffset
end

local function getTarget()
    local nearest = nil
    local minDistance = math.huge
    local viewportCenter = Cam.ViewportSize / 2
    raycastParams.FilterDescendantsInstances = {Player.Character}
    for _, npc in ipairs(validNPCs) do
        local predictedPos = predictPos(npc)
        local screenPos, visible = Cam:WorldToViewportPoint(predictedPos)
        if visible and screenPos.Z > 0 then
            local ray = workspace:Raycast(
                Cam.CFrame.Position,
                (predictedPos - Cam.CFrame.Position).Unit * 1000,
                raycastParams
            )
            if ray and ray.Instance:IsDescendantOf(npc) then
                local distance = (Vector2.new(screenPos.X, screenPos.Y) - viewportCenter).Magnitude
                if distance < minDistance and distance < fov then
                    minDistance = distance
                    nearest = npc
                end
            end
        end
    end
    return nearest
end

local function aim(targetPosition)
    local currentCF = Cam.CFrame
    local targetDirection = (targetPosition - currentCF.Position).Unit
    local smoothFactor = 0.581
    local newLookVector = currentCF.LookVector:Lerp(targetDirection, smoothFactor)
    Cam.CFrame = CFrame.new(currentCF.Position, currentCF.Position + newLookVector)
end

local heartbeat = RunService.Heartbeat
local lastUpdate = 0
local UPDATE_INTERVAL = 0.4

heartbeat:Connect(function(dt)
    updateDrawings()
    lastUpdate = lastUpdate + dt
    if lastUpdate >= UPDATE_INTERVAL then
        updateNPCs()
        lastUpdate = 0
    end
    if isAiming then
        local target = getTarget()
        if target then
            local predictedPosition = predictPos(target)
            aim(predictedPosition)
        end
    end
end)

ToggleButton.MouseButton1Click:Connect(function()
    isAiming = not isAiming
    FOVring.Visible = isAiming
    ToggleButton.Text = "AIMBOT: " .. (isAiming and "ON" or "OFF")
    ToggleButton.TextColor3 = isAiming and Color3.fromRGB(50, 255, 50) or Color3.fromRGB(255, 50, 50)
end)

local dragging, dragInput, dragStart, startPos

local function update(input)
    local delta = input.Position - dragStart
    ToggleButton.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

ToggleButton.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = ToggleButton.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

ToggleButton.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        update(input)
    end
end)

updateNPCs()
workspace.DescendantRemoved:Connect(function(descendant)
    if isNPC(descendant) then
        for i = #validNPCs, 1, -1 do
            if validNPCs[i] == descendant then
                table.remove(validNPCs, i)
                break
            end
        end
    end
end)

game:GetService("Players").PlayerRemoving:Connect(function()
    FOVring:Remove()
    ScreenGui:Destroy()
end)
end)
-------------------------------------------
Main:AddButton("Aimbotv3",function()
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Workspace = game:GetService("Workspace")

local player = Players.LocalPlayer
local cam = Workspace.CurrentCamera
local camlockEnabled = false
local camlockConnection
local targetESP = nil
local hitboxToggleEnabled = false

local defaultHRPValues = {}

local trackedNPCs = {}

for _, obj in ipairs(Workspace:GetDescendants()) do
    if obj:IsA("Model") 
       and obj:FindFirstChild("HumanoidRootPart") 
       and obj:FindFirstChild("Humanoid") 
       and not Players:GetPlayerFromCharacter(obj) then

        local hrp = obj.HumanoidRootPart
        local humanoid = obj.Humanoid

        if defaultHRPValues[hrp] == nil then
            defaultHRPValues[hrp] = {
                Size = hrp.Size,
                Transparency = hrp.Transparency,
                CanCollide = hrp.CanCollide
            }
        end

        humanoid.Died:Connect(function()
            task.wait(0.2)
            local defaults = defaultHRPValues[hrp]
            if defaults then
                hrp.Size = defaults.Size
                hrp.Transparency = defaults.Transparency
                hrp.CanCollide = defaults.CanCollide
            end
        end)
    end
end

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "NPCCamlockGUI"
screenGui.ResetOnSpawn = false
screenGui.Parent = player:WaitForChild("PlayerGui")

local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 200, 0, 120)
mainFrame.Position = UDim2.new(0.85, -100, 0.75, -60)
mainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
mainFrame.BackgroundTransparency = 0.3
mainFrame.BorderSizePixel = 0
mainFrame.Active = true
mainFrame.Draggable = true
mainFrame.Parent = screenGui

local uiScale = Instance.new("UIScale")
uiScale.Scale = 1/1.2
uiScale.Parent = mainFrame

local uicorner = Instance.new("UICorner")
uicorner.CornerRadius = UDim.new(0, 12)
uicorner.Parent = mainFrame

local toggleButton = Instance.new("TextButton")
toggleButton.Size = UDim2.new(1, -20, 0, 40)
toggleButton.Position = UDim2.new(0, 10, 0, 10)
toggleButton.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
toggleButton.BackgroundTransparency = 0.4
toggleButton.Text = "NPC Camlock: OFF"
toggleButton.TextColor3 = Color3.new(1, 1, 1)
toggleButton.Font = Enum.Font.Fantasy
toggleButton.TextSize = 22
toggleButton.Parent = mainFrame

local uicorner2 = Instance.new("UICorner")
uicorner2.CornerRadius = UDim.new(0, 12)
uicorner2.Parent = toggleButton

local toggleHitboxButton = Instance.new("TextButton")
toggleHitboxButton.Size = UDim2.new(1, -20, 0, 40)
toggleHitboxButton.Position = UDim2.new(0, 10, 0, 70)
toggleHitboxButton.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
toggleHitboxButton.BackgroundTransparency = 0.4
toggleHitboxButton.Text = "NPC Hitbox: Default"
toggleHitboxButton.TextColor3 = Color3.new(1, 1, 1)
toggleHitboxButton.Font = Enum.Font.Fantasy
toggleHitboxButton.TextSize = 22
toggleHitboxButton.Parent = mainFrame

local uicorner3 = Instance.new("UICorner")
uicorner3.CornerRadius = UDim.new(0, 12)
uicorner3.Parent = toggleHitboxButton

mainFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.Touch then
        UserInputService.MouseBehavior = Enum.MouseBehavior.Default
    end
end)
mainFrame.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.Touch then
        UserInputService.MouseBehavior = Enum.MouseBehavior.LockCenter
    end
end)

local function createESP(target)
    if target and target.Parent then
        if targetESP then targetESP:Destroy() end
        targetESP = Instance.new("Highlight")
        targetESP.FillTransparency = 1
        targetESP.OutlineColor = Color3.fromRGB(255, 0, 0)
        targetESP.OutlineTransparency = 0
        targetESP.Parent = target.Parent
    end
end

local function removeESP()
    if targetESP then
        targetESP:Destroy()
        targetESP = nil
    end
end

local function hasClearLineOfSight(targetHead)
    local origin = cam.CFrame.Position
    local direction = (targetHead.Position - origin).unit * (targetHead.Position - origin).Magnitude
    local raycastParams = RaycastParams.new()
    raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
    raycastParams.FilterDescendantsInstances = {player.Character}
    
    local result = Workspace:Raycast(origin, direction, raycastParams)
    return result == nil or result.Instance:IsDescendantOf(targetHead.Parent)
end

local function getClosestNPCTarget()
    local character = player.Character
    if not character or not character:FindFirstChild("HumanoidRootPart") then
        return nil
    end

    local closestNPCHead = nil  
    local shortestDistance = math.huge  

    for npc, _ in pairs(trackedNPCs) do  
        if npc and npc.Parent then
            local humanoid = npc:FindFirstChild("Humanoid")
            local head = npc:FindFirstChild("Head")
            if humanoid and head then
                local distance = (head.Position - character.HumanoidRootPart.Position).Magnitude  
                if distance <= 330 
                   and humanoid.Health > 0 
                   and humanoid:GetState() ~= Enum.HumanoidStateType.Dead 
                   and distance < shortestDistance 
                   and hasClearLineOfSight(head) then  

                    shortestDistance = distance  
                    closestNPCHead = head  
                end  
            end
        else
            trackedNPCs[npc] = nil
        end
    end  

    return closestNPCHead
end

local targetHead = nil
local lastTargetUpdate = 0
local targetUpdateInterval = 0.1

local function startCamlock()
    camlockConnection = RunService.RenderStepped:Connect(function()
        local currentTime = tick()
        if currentTime - lastTargetUpdate >= targetUpdateInterval then
            targetHead = getClosestNPCTarget()
            lastTargetUpdate = currentTime
        end

        if targetHead then
            local distance = (targetHead.Position - cam.CFrame.Position).Magnitude
            if distance > 300 then
                removeESP()
            else
                local heightCompensation = math.clamp(distance * 0, 0.2, 1.8)
                local headPos = targetHead.Position + Vector3.new(0, targetHead.Size.Y / 2 - heightCompensation, 0)
                local camPos = cam.CFrame.Position  
                local direction = (headPos - camPos).unit  
                local newCF = CFrame.lookAt(camPos, camPos + direction)  
                cam.CFrame = newCF  
                createESP(targetHead)
            end  
        else  
            removeESP()  
        end  
    end)
end

local function stopCamlock()
    if camlockConnection then
        camlockConnection:Disconnect()
        camlockConnection = nil
    end
    removeESP()
end

toggleButton.MouseButton1Click:Connect(function()
    camlockEnabled = not camlockEnabled
    if camlockEnabled then
        toggleButton.Text = "NPC Camlock: ON"
        startCamlock()
    else
        toggleButton.Text = "NPC Camlock: OFF"
        stopCamlock()
    end
end)

local function updateNPCHitbox(npc)
    if npc:IsA("Model") and npc:FindFirstChild("Humanoid") and npc:FindFirstChild("HumanoidRootPart") then
        if Players:GetPlayerFromCharacter(npc) then
            return
        end
        if npc.Name == "Horse" then
            return
        end

        local humanoid = npc.Humanoid
        local hrp = npc.HumanoidRootPart

        if defaultHRPValues[hrp] == nil then
            defaultHRPValues[hrp] = {
                Size = hrp.Size,
                Transparency = hrp.Transparency,
                CanCollide = hrp.CanCollide
            }
        end

        if humanoid.Health <= 0 then
            local defaults = defaultHRPValues[hrp]
            if defaults then
                hrp.Size = defaults.Size
                hrp.Transparency = defaults.Transparency
                hrp.CanCollide = defaults.CanCollide
            end
            return
        end

        if hitboxToggleEnabled then
            hrp.Size = Vector3.new(10, 10, 10)
            hrp.Transparency = 0.85
            hrp.CanCollide = false
        else
            local defaults = defaultHRPValues[hrp]
            if defaults then
                hrp.Size = defaults.Size
                hrp.Transparency = defaults.Transparency
                hrp.CanCollide = defaults.CanCollide
            end
        end
    end
end

local function updateAllNPCsHitbox()
    for _, obj in ipairs(Workspace:GetDescendants()) do
        if obj:IsA("Model") 
           and obj:FindFirstChild("HumanoidRootPart") 
           and obj:FindFirstChild("Humanoid") 
           and not Players:GetPlayerFromCharacter(obj) then
            updateNPCHitbox(obj)
        end
    end
end

toggleHitboxButton.MouseButton1Click:Connect(function()
    hitboxToggleEnabled = not hitboxToggleEnabled
    if hitboxToggleEnabled then
        toggleHitboxButton.Text = "NPC Hitbox: ON"
    else
        toggleHitboxButton.Text = "NPC Hitbox: Default"
    end
    updateAllNPCsHitbox()
end)

Workspace.DescendantAdded:Connect(function(obj)
    if obj:IsA("Model") then
        local humanoid = obj:FindFirstChild("Humanoid") or obj:WaitForChild("Humanoid", 5)
        if humanoid then
            local hrp = obj:FindFirstChild("HumanoidRootPart") or obj:WaitForChild("HumanoidRootPart", 5)
            if hrp and not Players:GetPlayerFromCharacter(obj) then
                if defaultHRPValues[hrp] == nil then
                    defaultHRPValues[hrp] = {
                        Size = hrp.Size,
                        Transparency = hrp.Transparency,
                        CanCollide = hrp.CanCollide
                    }
                end

                humanoid.Died:Connect(function()
                    task.wait(0.2)
                    local defaults = defaultHRPValues[hrp]
                    if defaults then
                        hrp.Size = defaults.Size
                        hrp.Transparency = defaults.Transparency
                        hrp.CanCollide = defaults.CanCollide
                    end
                end)

                task.wait(0.5)
                updateNPCHitbox(obj)
            end
        end
    end
end)

local function addNPC(npc)
    if npc:IsA("Model") 
       and npc:FindFirstChild("Humanoid") 
       and npc:FindFirstChild("HumanoidRootPart") 
       and not Players:GetPlayerFromCharacter(npc)
       and npc.Name ~= "Horse" then
        trackedNPCs[npc] = true
    end
end

for _, obj in ipairs(Workspace:GetDescendants()) do
    if obj:IsA("Model") 
       and obj:FindFirstChild("Humanoid") 
       and obj:FindFirstChild("HumanoidRootPart") 
       and not Players:GetPlayerFromCharacter(obj)
       and obj.Name ~= "Horse" then
        addNPC(obj)
    end
end

Workspace.DescendantAdded:Connect(function(obj)
    if obj:IsA("Model") then
        task.wait(0.5)
        addNPC(obj)
    end
end)

Workspace.DescendantRemoving:Connect(function(obj)
    if trackedNPCs[obj] then
        trackedNPCs[obj] = nil
    end
end)

spawn(function()
    while task.wait(1) do
        for npc, _ in pairs(trackedNPCs) do
            if npc and npc.Parent then
                local humanoid = npc:FindFirstChild("Humanoid")
                local hrp = npc:FindFirstChild("HumanoidRootPart")
                if humanoid and hrp and humanoid.Health <= 0 then
                    local defaults = defaultHRPValues[hrp]
                    if defaults then
                        hrp.Size = defaults.Size
                        hrp.Transparency = defaults.Transparency
                        hrp.CanCollide = defaults.CanCollide
                    end
                end
            else
                trackedNPCs[npc] = nil
            end
        end
    end
end)

game:GetService("StarterGui"):SetCore("SendNotification", {
    Title = "code by Truong",
    Text = "on Roblox",
    Duration = 10
})

end)
-------------------------------------------
Main:AddButton("Full brightv1",function()
game:GetService("Lighting").Brightness = 2
game:GetService("Lighting").ClockTime = 12
game:GetService("Lighting").FogEnd = 100000
game:GetService("Lighting").GlobalShadows = false
game:GetService("Lighting").OutdoorAmbient = Color3.fromRGB(128, 128, 128)

end)
-------------------------------------------
Main:AddButton("Full brightv2",function()
if not _G.FullBrightExecuted then

	_G.FullBrightEnabled = false

	_G.NormalLightingSettings = {
		Brightness = game:GetService("Lighting").Brightness,
		ClockTime = game:GetService("Lighting").ClockTime,
		FogEnd = game:GetService("Lighting").FogEnd,
		GlobalShadows = game:GetService("Lighting").GlobalShadows,
		Ambient = game:GetService("Lighting").Ambient
	}

	game:GetService("Lighting"):GetPropertyChangedSignal("Brightness"):Connect(function()
		if game:GetService("Lighting").Brightness ~= 1 and game:GetService("Lighting").Brightness ~= _G.NormalLightingSettings.Brightness then
			_G.NormalLightingSettings.Brightness = game:GetService("Lighting").Brightness
			if not _G.FullBrightEnabled then
				repeat
					wait()
				until _G.FullBrightEnabled
			end
			game:GetService("Lighting").Brightness = 1
		end
	end)

	game:GetService("Lighting"):GetPropertyChangedSignal("ClockTime"):Connect(function()
		if game:GetService("Lighting").ClockTime ~= 12 and game:GetService("Lighting").ClockTime ~= _G.NormalLightingSettings.ClockTime then
			_G.NormalLightingSettings.ClockTime = game:GetService("Lighting").ClockTime
			if not _G.FullBrightEnabled then
				repeat
					wait()
				until _G.FullBrightEnabled
			end
			game:GetService("Lighting").ClockTime = 12
		end
	end)

	game:GetService("Lighting"):GetPropertyChangedSignal("FogEnd"):Connect(function()
		if game:GetService("Lighting").FogEnd ~= 786543 and game:GetService("Lighting").FogEnd ~= _G.NormalLightingSettings.FogEnd then
			_G.NormalLightingSettings.FogEnd = game:GetService("Lighting").FogEnd
			if not _G.FullBrightEnabled then
				repeat
					wait()
				until _G.FullBrightEnabled
			end
			game:GetService("Lighting").FogEnd = 786543
		end
	end)

	game:GetService("Lighting"):GetPropertyChangedSignal("GlobalShadows"):Connect(function()
		if game:GetService("Lighting").GlobalShadows ~= false and game:GetService("Lighting").GlobalShadows ~= _G.NormalLightingSettings.GlobalShadows then
			_G.NormalLightingSettings.GlobalShadows = game:GetService("Lighting").GlobalShadows
			if not _G.FullBrightEnabled then
				repeat
					wait()
				until _G.FullBrightEnabled
			end
			game:GetService("Lighting").GlobalShadows = false
		end
	end)

	game:GetService("Lighting"):GetPropertyChangedSignal("Ambient"):Connect(function()
		if game:GetService("Lighting").Ambient ~= Color3.fromRGB(178, 178, 178) and game:GetService("Lighting").Ambient ~= _G.NormalLightingSettings.Ambient then
			_G.NormalLightingSettings.Ambient = game:GetService("Lighting").Ambient
			if not _G.FullBrightEnabled then
				repeat
					wait()
				until _G.FullBrightEnabled
			end
			game:GetService("Lighting").Ambient = Color3.fromRGB(178, 178, 178)
		end
	end)

	game:GetService("Lighting").Brightness = 1
	game:GetService("Lighting").ClockTime = 12
	game:GetService("Lighting").FogEnd = 786543
	game:GetService("Lighting").GlobalShadows = false
	game:GetService("Lighting").Ambient = Color3.fromRGB(178, 178, 178)

	local LatestValue = true
	spawn(function()
		repeat
			wait()
		until _G.FullBrightEnabled
		while wait() do
			if _G.FullBrightEnabled ~= LatestValue then
				if not _G.FullBrightEnabled then
					game:GetService("Lighting").Brightness = _G.NormalLightingSettings.Brightness
					game:GetService("Lighting").ClockTime = _G.NormalLightingSettings.ClockTime
					game:GetService("Lighting").FogEnd = _G.NormalLightingSettings.FogEnd
					game:GetService("Lighting").GlobalShadows = _G.NormalLightingSettings.GlobalShadows
					game:GetService("Lighting").Ambient = _G.NormalLightingSettings.Ambient
				else
					game:GetService("Lighting").Brightness = 1
					game:GetService("Lighting").ClockTime = 12
					game:GetService("Lighting").FogEnd = 786543
					game:GetService("Lighting").GlobalShadows = false
					game:GetService("Lighting").Ambient = Color3.fromRGB(178, 178, 178)
				end
				LatestValue = not LatestValue
			end
		end
	end)
end

_G.FullBrightExecuted = true
_G.FullBrightEnabled = not _G.FullBrightEnabled
end)
-------------------------------------------
Main:AddButton("full brightv3",function()
local Lighting = game:GetService("Lighting")

local function bafd()
    Lighting.Ambient = Color3.fromRGB(255, 255, 255)
    Lighting.OutdoorAmbient = Color3.fromRGB(255, 255, 255)
    Lighting.Brightness = 1
    Lighting.GlobalShadows = false
    Lighting.FogStart = 99e9
    Lighting.FogEnd = 99e9
    Lighting.FogColor = Color3.fromRGB(255, 255, 255)
end

bafd()

Lighting:GetPropertyChangedSignal("Ambient"):Connect(bafd)
Lighting:GetPropertyChangedSignal("OutdoorAmbient"):Connect(bafd)
Lighting:GetPropertyChangedSignal("Brightness"):Connect(bafd)
Lighting:GetPropertyChangedSignal("GlobalShadows"):Connect(bafd)
Lighting:GetPropertyChangedSignal("FogStart"):Connect(bafd)
Lighting:GetPropertyChangedSignal("FogEnd"):Connect(bafd)
Lighting:GetPropertyChangedSignal("FogColor"):Connect(bafd)
end)
-------------------------------------------
Main:AddButton("Full brightv4",function()
pcall(function()
    local lighting = game:GetService("Lighting");
    lighting.Ambient = Color3.fromRGB(255, 255, 255);
    lighting.Brightness = 1;
    lighting.FogEnd = 1e10;
    for i, v in pairs(lighting:GetDescendants()) do
        if v:IsA("BloomEffect") or v:IsA("BlurEffect") or v:IsA("ColorCorrectionEffect") or v:IsA("SunRaysEffect") then
            v.Enabled = false;
        end;
    end;
    lighting.Changed:Connect(function()
        lighting.Ambient = Color3.fromRGB(255, 255, 255);
        lighting.Brightness = 1;
        lighting.FogEnd = 1e10;
    end);
    spawn(function()
        local character = game:GetService("Players").LocalPlayer.Character;
        while wait() do
            repeat wait() until character ~= nil;
            if not character.HumanoidRootPart:FindFirstChildWhichIsA("PointLight") then
                local headlight = Instance.new("PointLight", character.HumanoidRootPart);
                headlight.Brightness = 1;
                headlight.Range = 60;
            end;
        end;
    end);
end)
end)
-------------------------------------------